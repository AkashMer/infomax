% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/infomax.R
\name{run_infomax}
\alias{run_infomax}
\title{Run Infomax Independent Component Analysis}
\usage{
run_infomax(
  x,
  centre = TRUE,
  pca = NULL,
  anneal = 0.98,
  annealdeg = 60,
  tol = 1e-07,
  lrate = NULL,
  blocksize = NULL,
  kurtsize = 6000,
  maxiter = 200,
  extended = TRUE,
  whiten = c("sqrtm", "ZCA", "PCA", "ZCA-cor", "PCA-cor", "none"),
  random_seed = NULL,
  verbose = TRUE
)
}
\arguments{
\item{x}{matrix of data; features in columns, samples in rows.}

\item{centre}{Mean-centre columns before running the algorithm. Defaults to
TRUE.}

\item{pca}{Apply PCA decomposition. Accepts any value between 0 and
1(exclusive), or an integer/whole number indicating the number of principal
components to be passed for ICA decomposition.
Values between 0 and 1 imply the percentage of variance explained by the
selected components.
Defaults to \code{NULL} which will result in all components being selected}

\item{anneal}{Annealing rate at which learning rate reduced.}

\item{annealdeg}{Angle at which learning rate reduced.}

\item{tol}{Tolerance for convergence of ICA. Defaults to 1e-07.}

\item{lrate}{Initial learning rate. NULL}

\item{blocksize}{Size of blocks of data used for learning.}

\item{kurtsize}{Size of blocks for kurtosis checking. Defaults to 6000 or
length of data, whichever is smaller.}

\item{maxiter}{Maximum number of iterations. Defaults to 200.}

\item{extended}{Run extended-Infomax. Defaults to TRUE.}

\item{whiten}{Whitening method to use. See notes on usage.}

\item{random_seed}{Value to be passed to \code{set.seed()}. Defaults to NULL}

\item{verbose}{Print informative messages for each update of the algorithm.}
}
\value{
A list containing:
\itemize{
\item \strong{S}:  Matrix of source estimates
\item \strong{M}:  Estimated mixing matrix
\item \strong{W}:  Estimated unmixing matrix
\item \strong{iter}: Number of iterations completed
}
}
\description{
Run Infomax or extended-Infomax on a matrix of data. Uses a mini-batch stochastic
gradient descent algorithm. The matrix can be prewhitened in several ways. The default is to perform
sphering using the inverse of the square root of the covariance matrix of the
original data, the method used by the 'EEGLAB' and 'MNE-Python' toolboxes in
other languages. Whitening methods implemented in the package \code{whitening} are
\code{PCA}, \code{ZCA}, \code{ZCA-cor}, and \code{PCA-cor}. Please see the \code{whitening} package
for further information on their implementation of these methods.
}
\examples{
time_x <- seq(0, 1, by = 1/256)
source_a <- sin(2 * pi * 5 * time_x)
source_b <- sin(2 * pi * 10 * time_x)
plot(time_x, source_a, type = "l")
plot(time_x, source_b, type = "l")
plot(time_x, source_a + 2 * source_b, type = "l")
plot(time_x, source_a * 3.4 + 1.5 * source_b, type = "l")
mixed_data <- matrix(NA,
    nrow = length(time_x),
    ncol = 2)
mixed_data[, 1] <- source_a + 2 * source_b
mixed_data[, 2] <- source_a * 3.4 + 1.5 * source_b
dat_out <- run_infomax(mixed_data, whiten = "PCA")
plot(time_x, dat_out$S[, 1],
    type = "l")
plot(time_x,
     dat_out$S[, 2],
     type = "l")
}
\references{
\itemize{
\item Bell, A.J., & Sejnowski, T.J. (1995). An
information-maximization approach to blind separation and blind
deconvolution. \emph{Neural Computation, 7,} 1129-159
\item Makeig, S., Bell, A.J., Jung, T-P and Sejnowski, T.J., "Independent component analysis of
electroencephalographic data,"  In: D. Touretzky, M. Mozer and M. Hasselmo
(Eds). Advances in Neural  Information Processing Systems 8:145-151, MIT
Press, Cambridge, MA (1996).
}
}
\author{
Matt Craddock \email{matt@mattcraddock.com}
}
